{
    "error": [
        {
            "severity": "error",
            "line_from": 121,
            "line_to": 121,
            "type": "InvalidArgument",
            "message": "Argument 1 of Spryker\\Zed\\Availability\\Persistence\\Mapper\\AvailabilityMapperInterface::mapAvailabilityEntityToProductAbstractAvailabilityTransfer expects array<array-key, mixed>, Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityAbstract provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityRepository.php",
            "snippet": "                $availabilityAbstractEntityArray,",
            "selected_text": "$availabilityAbstractEntityArray",
            "error_level": 6,
            "shortcode": 4
        },
        {
            "severity": "error",
            "line_from": 208,
            "line_to": 208,
            "type": "InvalidArgument",
            "message": "Argument 1 of Spryker\\Zed\\Availability\\Persistence\\Propel\\Mapper\\StoreMapper::mapStoreEntitiesToStoreTransfers expects array<array-key, Orm\\Zed\\Store\\Persistence\\SpyStore>, list<Orm\\Zed\\Store\\Persistence\\SpyStore|mixed|null> provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityRepository.php",
            "snippet": "            ->mapStoreEntitiesToStoreTransfers($storeEntities);",
            "selected_text": "$storeEntities",
            "error_level": 6,
            "shortcode": 4
        }
    ],
    "warning": [
        {
            "severity": "info",
            "line_from": 45,
            "line_to": 45,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::client does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Client/Availability/AvailabilityDependencyProvider.php",
            "snippet": "            return new AvailabilityToStorageBridge($container->getLocator()->storage()->client());",
            "selected_text": "client",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 59,
            "line_to": 59,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::client does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Client/Availability/AvailabilityDependencyProvider.php",
            "snippet": "            return new AvailabilityToLocaleBridge($container->getLocator()->locale()->client());",
            "selected_text": "client",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 73,
            "line_to": 73,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::client does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Client/Availability/AvailabilityDependencyProvider.php",
            "snippet": "            return new AvailabilityToZedRequestClientBridge($container->getLocator()->zedRequest()->client());",
            "selected_text": "client",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 75,
            "line_to": 75,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::facade does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/AvailabilityDependencyProvider.php",
            "snippet": "            return new AvailabilityToStoreFacadeBridge($container->getLocator()->store()->facade());",
            "selected_text": "facade",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 90,
            "line_to": 90,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::facade does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/AvailabilityDependencyProvider.php",
            "snippet": "                $container->getLocator()->event()->facade()",
            "selected_text": "facade",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 105,
            "line_to": 105,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::facade does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/AvailabilityDependencyProvider.php",
            "snippet": "            return new AvailabilityToTouchFacadeBridge($container->getLocator()->touch()->facade());",
            "selected_text": "facade",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 119,
            "line_to": 119,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::facade does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/AvailabilityDependencyProvider.php",
            "snippet": "            return new AvailabilityToStockFacadeBridge($container->getLocator()->stock()->facade());",
            "selected_text": "facade",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 133,
            "line_to": 133,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::facade does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/AvailabilityDependencyProvider.php",
            "snippet": "            return new AvailabilityToOmsFacadeBridge($container->getLocator()->oms()->facade());",
            "selected_text": "facade",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 147,
            "line_to": 147,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::facade does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/AvailabilityDependencyProvider.php",
            "snippet": "            return new AvailabilityToProductFacadeBridge($container->getLocator()->product()->facade());",
            "selected_text": "facade",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 183,
            "line_to": 183,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::querycontainer does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/AvailabilityDependencyProvider.php",
            "snippet": "            return new AvailabilityToProductQueryContainerBridge($container->getLocator()->product()->queryContainer());",
            "selected_text": "queryContainer",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 134,
            "line_to": 134,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Availability\\Business\\Model\\AvailabilityHandler::updateProductAbstractAvailabilityBySku cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/AvailabilityHandler.php",
            "snippet": "        $this->updateProductAbstractAvailabilityBySku($abstractSku, $storeTransfer);",
            "selected_text": "$abstractSku",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 208,
            "line_to": 208,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Availability\\Business\\Model\\AvailabilityHandler::triggerProductIsAvailableAgainEvent cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/AvailabilityHandler.php",
            "snippet": "            $this->triggerProductIsAvailableAgainEvent($productConcreteAvailabilityTransfer->getSku(), $storeTransfer);",
            "selected_text": "$productConcreteAvailabilityTransfer->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 259,
            "line_to": 259,
            "type": "PossiblyNullReference",
            "message": "Cannot call method greaterThan on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/AvailabilityHandler.php",
            "snippet": "        return $productConcreteAvailabilityTransfer->getAvailability()->greaterThan(0) ||",
            "selected_text": "greaterThan",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 169,
            "line_to": 169,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Availability\\Dependency\\Facade\\AvailabilityToStoreFacadeInterface::getStoreByName cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductAvailabilityReader.php",
            "snippet": "        return $this->storeFacade->getStoreByName($storeTransfer->getName());",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 68,
            "line_to": 68,
            "type": "PossiblyNullArrayOffset",
            "message": "Cannot access value on variable  using possibly null offset null|string",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductReservationReader.php",
            "snippet": "        $stockNames = $this->stockFacade->getStoreToWarehouseMapping()[$storeTransfer->getName()];",
            "selected_text": "$this->stockFacade->getStoreToWarehouseMapping()",
            "error_level": 3,
            "shortcode": 125
        },
        {
            "severity": "info",
            "line_from": 74,
            "line_to": 74,
            "type": "PossiblyNullArgument",
            "message": "Argument 3 of Spryker\\Zed\\Availability\\Persistence\\AvailabilityQueryContainerInterface::queryAvailabilityAbstractWithStockByIdProductAbstractAndIdLocale cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductReservationReader.php",
            "snippet": "                $storeTransfer->getIdStore(),",
            "selected_text": "$storeTransfer->getIdStore()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 79,
            "line_to": 79,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Availability\\Business\\Model\\ProductReservationReader::mapAbstractProductAvailabilityEntityToTransfer cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductReservationReader.php",
            "snippet": "        return $this->mapAbstractProductAvailabilityEntityToTransfer($productAbstractEntity);",
            "selected_text": "$productAbstractEntity",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 95,
            "line_to": 95,
            "type": "PossiblyNullArrayOffset",
            "message": "Cannot access value on variable  using possibly null offset null|string",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductReservationReader.php",
            "snippet": "        $stockTypes = $this->stockFacade->getStoreToWarehouseMapping()[$storeTransfer->getName()];",
            "selected_text": "$this->stockFacade->getStoreToWarehouseMapping()",
            "error_level": 3,
            "shortcode": 125
        },
        {
            "severity": "info",
            "line_from": 101,
            "line_to": 101,
            "type": "PossiblyNullArgument",
            "message": "Argument 3 of Spryker\\Zed\\Availability\\Persistence\\AvailabilityQueryContainerInterface::queryAvailabilityAbstractWithStockByIdProductAbstractAndIdLocale cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductReservationReader.php",
            "snippet": "                $storeTransfer->getIdStore(),",
            "selected_text": "$storeTransfer->getIdStore()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 128,
            "line_to": 128,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Availability\\Persistence\\AvailabilityQueryContainerInterface::queryAvailabilityBySkuAndIdStore cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductReservationReader.php",
            "snippet": "            ->queryAvailabilityBySkuAndIdStore($productConcreteAvailabilityRequestTransfer->getSku(), $storeTransfer->getIdStore())",
            "selected_text": "$productConcreteAvailabilityRequestTransfer->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 128,
            "line_to": 128,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Availability\\Persistence\\AvailabilityQueryContainerInterface::queryAvailabilityBySkuAndIdStore cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductReservationReader.php",
            "snippet": "            ->queryAvailabilityBySkuAndIdStore($productConcreteAvailabilityRequestTransfer->getSku(), $storeTransfer->getIdStore())",
            "selected_text": "$storeTransfer->getIdStore()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 55,
            "line_to": 55,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Availability\\Business\\Model\\ProductsAvailableCheckoutPreCondition::getAccumulatedItemQuantityForGivenItemSku cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductsAvailableCheckoutPreCondition.php",
            "snippet": "            $quantity = $this->getAccumulatedItemQuantityForGivenItemSku($quoteTransfer, $itemTransfer->getSku());",
            "selected_text": "$itemTransfer->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 60,
            "line_to": 60,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Availability\\Business\\Model\\SellableInterface::isProductSellableForStore cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductsAvailableCheckoutPreCondition.php",
            "snippet": "            if ($this->sellable->isProductSellableForStore($itemTransfer->getSku(), $quantity, $storeTransfer, $productAvailabilityCriteriaTransfer)) {",
            "selected_text": "$itemTransfer->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 60,
            "line_to": 60,
            "type": "PossiblyNullArgument",
            "message": "Argument 3 of Spryker\\Zed\\Availability\\Business\\Model\\SellableInterface::isProductSellableForStore cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductsAvailableCheckoutPreCondition.php",
            "snippet": "            if ($this->sellable->isProductSellableForStore($itemTransfer->getSku(), $quantity, $storeTransfer, $productAvailabilityCriteriaTransfer)) {",
            "selected_text": "$storeTransfer",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 64,
            "line_to": 64,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Availability\\Business\\Model\\ProductsAvailableCheckoutPreCondition::addAvailabilityErrorToCheckoutResponse cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductsAvailableCheckoutPreCondition.php",
            "snippet": "            $this->addAvailabilityErrorToCheckoutResponse($checkoutResponse, $itemTransfer->getSku());",
            "selected_text": "$itemTransfer->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 86,
            "line_to": 86,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\DecimalObject\\Decimal::add cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductsAvailableCheckoutPreCondition.php",
            "snippet": "            $quantity = $quantity->add($itemTransfer->getQuantity());",
            "selected_text": "$itemTransfer->getQuantity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 133,
            "line_to": 133,
            "type": "PossiblyNullReference",
            "message": "Cannot call method greaterThan on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/Sellable.php",
            "snippet": "            return $productConcreteAvailabilityTransfer->getAvailability()->greaterThan($quantity);",
            "selected_text": "greaterThan",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 136,
            "line_to": 136,
            "type": "PossiblyNullReference",
            "message": "Cannot call method greatherThanOrEquals on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/Sellable.php",
            "snippet": "        return $productConcreteAvailabilityTransfer->getAvailability()->greatherThanOrEquals($quantity);",
            "selected_text": "greatherThanOrEquals",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 153,
            "line_to": 153,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Availability\\Dependency\\Facade\\AvailabilityToStoreFacadeInterface::getStoreByName cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/Sellable.php",
            "snippet": "        return $this->storeFacade->getStoreByName($storeTransfer->getName());",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 63,
            "line_to": 63,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Availability\\Business\\AvailabilityFacadeInterface::updateAvailability cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Communication/Plugin/Oms/AvailabilityReservationPostSaveTerminationAwareStrategyPlugin.php",
            "snippet": "        $this->getFacade()->updateAvailability($reservationRequestTransfer->getSku());",
            "selected_text": "$reservationRequestTransfer->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 72,
            "line_to": 72,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityAbstract::setQuantity cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityEntityManager.php",
            "snippet": "            ->setQuantity($productAbstractAvailabilityTransfer->getAvailability())",
            "selected_text": "$productAbstractAvailabilityTransfer->getAvailability()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 112,
            "line_to": 112,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Orm\\Zed\\Availability\\Persistence\\SpyAvailability::setQuantity cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityEntityManager.php",
            "snippet": "        $availabilityEntity->setQuantity($productConcreteAvailabilityTransfer->getAvailability());",
            "selected_text": "$productConcreteAvailabilityTransfer->getAvailability()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 113,
            "line_to": 113,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Orm\\Zed\\Availability\\Persistence\\SpyAvailability::setIsNeverOutOfStock cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityEntityManager.php",
            "snippet": "        $availabilityEntity->setIsNeverOutOfStock($productConcreteAvailabilityTransfer->getIsNeverOutOfStock());",
            "selected_text": "$productConcreteAvailabilityTransfer->getIsNeverOutOfStock()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 120,
            "line_to": 120,
            "type": "MoreSpecificReturnType",
            "message": "The declared return type 'Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityQuery' for Spryker\\Zed\\Availability\\Persistence\\AvailabilityQueryContainer::querySumQuantityOfAvailabilityAbstract is more specific than the inferred return type 'Propel\\Runtime\\ActiveQuery\\ModelCriteria'",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityQueryContainer.php",
            "snippet": "     * @return \\Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityQuery",
            "selected_text": "\\Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityQuery",
            "error_level": 3,
            "shortcode": 70
        },
        {
            "severity": "info",
            "line_from": 124,
            "line_to": 129,
            "type": "LessSpecificReturnStatement",
            "message": "The type 'Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityQuery&static|Propel\\Runtime\\ActiveQuery\\ModelCriteria' is more general than the declared return type 'Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityQuery' for Spryker\\Zed\\Availability\\Persistence\\AvailabilityQueryContainer::querySumQuantityOfAvailabilityAbstract",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityQueryContainer.php",
            "snippet": "        return $this->getFactory()\n            ->createSpyAvailabilityQuery()\n            ->filterByFkAvailabilityAbstract($idAvailabilityAbstract)\n            ->filterByFkStore($idStore)\n            ->withColumn('SUM(' . SpyAvailabilityTableMap::COL_QUANTITY . ')', static::SUM_QUANTITY)\n            ->select([static::SUM_QUANTITY]);",
            "selected_text": "$this->getFactory()\n            ->createSpyAvailabilityQuery()\n            ->filterByFkAvailabilityAbstract($idAvailabilityAbstract)\n            ->filterByFkStore($idStore)\n            ->withColumn('SUM(' . SpyAvailabilityTableMap::COL_QUANTITY . ')', static::SUM_QUANTITY)\n            ->select([static::SUM_QUANTITY])",
            "error_level": 3,
            "shortcode": 129
        },
        {
            "severity": "info",
            "line_from": 146,
            "line_to": 146,
            "type": "PossiblyUndefinedMethod",
            "message": "Method Propel\\Runtime\\ActiveQuery\\Criteria::withcolumn does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityQueryContainer.php",
            "snippet": "            ->withColumn(static::GROUP_CONCAT . '(' . SpyStockProductTableMap::COL_IS_NEVER_OUT_OF_STOCK . ')', static::CONCRETE_NEVER_OUT_OF_STOCK_SET)",
            "selected_text": "withColumn",
            "error_level": 3,
            "shortcode": 108
        },
        {
            "severity": "info",
            "line_from": 174,
            "line_to": 174,
            "type": "PossiblyUndefinedMethod",
            "message": "Method Propel\\Runtime\\ActiveQuery\\Criteria::innerjoinspyproductabstractlocalizedattributes does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityQueryContainer.php",
            "snippet": "            ->innerJoinSpyProductAbstractLocalizedAttributes();",
            "selected_text": "innerJoinSpyProductAbstractLocalizedAttributes",
            "error_level": 3,
            "shortcode": 108
        },
        {
            "severity": "info",
            "line_from": 184,
            "line_to": 184,
            "type": "PossiblyUndefinedMethod",
            "message": "Method Propel\\Runtime\\ActiveQuery\\Criteria::withcolumn does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityQueryContainer.php",
            "snippet": "            ->withColumn(SpyProductAbstractLocalizedAttributesTableMap::COL_NAME, static::PRODUCT_NAME)",
            "selected_text": "withColumn",
            "error_level": 3,
            "shortcode": 108
        },
        {
            "severity": "info",
            "line_from": 237,
            "line_to": 237,
            "type": "PossiblyUndefinedMethod",
            "message": "Method Propel\\Runtime\\ActiveQuery\\Criteria::usespyproductabstractlocalizedattributesquery does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityQueryContainer.php",
            "snippet": "            ->useSpyProductAbstractLocalizedAttributesQuery()",
            "selected_text": "useSpyProductAbstractLocalizedAttributesQuery",
            "error_level": 3,
            "shortcode": 108
        },
        {
            "severity": "info",
            "line_from": 334,
            "line_to": 334,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityAbstractQuery::filterbyidproductabstract does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityQueryContainer.php",
            "snippet": "            ->filterByIdProductAbstract($idProductAbstract);",
            "selected_text": "filterByIdProductAbstract",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 358,
            "line_to": 358,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityAbstractQuery::filterbyidproductabstract_in does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityQueryContainer.php",
            "snippet": "            ->filterByIdProductAbstract_In($productAbstractIds);",
            "selected_text": "filterByIdProductAbstract_In",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 376,
            "line_to": 376,
            "type": "PossiblyUndefinedMethod",
            "message": "Method Propel\\Runtime\\ActiveQuery\\Criteria::withcolumn does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityQueryContainer.php",
            "snippet": "            ->withColumn('GROUP_CONCAT(' . SpyStockProductTableMap::COL_IS_NEVER_OUT_OF_STOCK . ')', static::CONCRETE_NEVER_OUT_OF_STOCK_SET)",
            "selected_text": "withColumn",
            "error_level": 3,
            "shortcode": 108
        },
        {
            "severity": "info",
            "line_from": 42,
            "line_to": 42,
            "type": "PossiblyUndefinedMethod",
            "message": "Method Propel\\Runtime\\ActiveQuery\\Criteria::where does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityRepository.php",
            "snippet": "            ->where(sprintf('%s = %d', SpyProductTableMap::COL_ID_PRODUCT, $idProductConcrete))",
            "selected_text": "where",
            "error_level": 3,
            "shortcode": 108
        },
        {
            "severity": "info",
            "line_from": 111,
            "line_to": 111,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Propel\\Runtime\\ActiveQuery\\ModelCriteria::groupbyabstractsku does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityRepository.php",
            "snippet": "            ->groupByAbstractSku()",
            "selected_text": "groupByAbstractSku",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 225,
            "line_to": 225,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\Product\\Persistence\\SpyProductAbstract|Propel\\Runtime\\ActiveRecord\\ActiveRecordInterface|mixed> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Persistence/AvailabilityRepository.php",
            "snippet": "            ->getData();",
            "selected_text": "getData",
            "error_level": 3,
            "shortcode": 113
        }
    ],
    "deprecation": [
        {
            "severity": "info",
            "line_from": 68,
            "line_to": 68,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Client\\Availability\\AvailabilityFactory::createAvailabilityStub has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Client/Availability/AvailabilityClient.php",
            "snippet": "            ->createAvailabilityStub()",
            "selected_text": "createAvailabilityStub",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 69,
            "line_to": 69,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Client\\Availability\\Zed\\AvailabilityStubInterface::findProductConcreteAvailability has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Client/Availability/AvailabilityClient.php",
            "snippet": "            ->findProductConcreteAvailability($productConcreteAvailabilityRequestTransfer);",
            "selected_text": "findProductConcreteAvailability",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 37,
            "line_to": 37,
            "type": "DeprecatedClass",
            "message": "Class Spryker\\Client\\Availability\\Zed\\AvailabilityStubInterface is marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Client/Availability/AvailabilityFactory.php",
            "snippet": "     * @return \\Spryker\\Client\\Availability\\Zed\\AvailabilityStubInterface",
            "selected_text": "\\Spryker\\Client\\Availability\\Zed\\AvailabilityStubInterface",
            "error_level": 2,
            "shortcode": 98
        },
        {
            "severity": "info",
            "line_from": 39,
            "line_to": 39,
            "type": "DeprecatedClass",
            "message": "Class Spryker\\Client\\Availability\\Zed\\AvailabilityStubInterface is marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Client/Availability/AvailabilityFactory.php",
            "snippet": "    public function createAvailabilityStub(): AvailabilityStubInterface",
            "selected_text": "AvailabilityStubInterface",
            "error_level": 2,
            "shortcode": 98
        },
        {
            "severity": "info",
            "line_from": 41,
            "line_to": 41,
            "type": "DeprecatedClass",
            "message": "Spryker\\Client\\Availability\\Zed\\AvailabilityStub is marked deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Client/Availability/AvailabilityFactory.php",
            "snippet": "        return new AvailabilityStub($this->getZedRequestClient());",
            "selected_text": "new AvailabilityStub($this->getZedRequestClient())",
            "error_level": 2,
            "shortcode": 98
        },
        {
            "severity": "info",
            "line_from": 16,
            "line_to": 16,
            "type": "DeprecatedInterface",
            "message": "Spryker\\Client\\Availability\\Zed\\AvailabilityStubInterface is marked deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Client/Availability/Zed/AvailabilityStub.php",
            "snippet": "class AvailabilityStub implements AvailabilityStubInterface",
            "selected_text": "AvailabilityStub",
            "error_level": 2,
            "shortcode": 152
        },
        {
            "severity": "info",
            "line_from": 96,
            "line_to": 96,
            "type": "DeprecatedClass",
            "message": "Class Spryker\\Zed\\Availability\\Business\\Model\\ProductReservationReaderInterface is marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/AvailabilityBusinessFactory.php",
            "snippet": "     * @return \\Spryker\\Zed\\Availability\\Business\\Model\\ProductReservationReaderInterface",
            "selected_text": "\\Spryker\\Zed\\Availability\\Business\\Model\\ProductReservationReaderInterface",
            "error_level": 2,
            "shortcode": 98
        },
        {
            "severity": "info",
            "line_from": 98,
            "line_to": 98,
            "type": "DeprecatedClass",
            "message": "Class Spryker\\Zed\\Availability\\Business\\Model\\ProductReservationReaderInterface is marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/AvailabilityBusinessFactory.php",
            "snippet": "    public function createProductReservationReader(): ProductReservationReaderInterface",
            "selected_text": "ProductReservationReaderInterface",
            "error_level": 2,
            "shortcode": 98
        },
        {
            "severity": "info",
            "line_from": 100,
            "line_to": 104,
            "type": "DeprecatedClass",
            "message": "Spryker\\Zed\\Availability\\Business\\Model\\ProductReservationReader is marked deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/AvailabilityBusinessFactory.php",
            "snippet": "        return new ProductReservationReader(\n            $this->getQueryContainer(),\n            $this->getStockFacade(),\n            $this->getStoreFacade()\n        );",
            "selected_text": "new ProductReservationReader(\n            $this->getQueryContainer(),\n            $this->getStockFacade(),\n            $this->getStoreFacade()\n        )",
            "error_level": 2,
            "shortcode": 98
        },
        {
            "severity": "info",
            "line_from": 150,
            "line_to": 150,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Availability\\Business\\AvailabilityBusinessFactory::createProductReservationReader has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/AvailabilityFacade.php",
            "snippet": "            ->createProductReservationReader()",
            "selected_text": "createProductReservationReader",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 151,
            "line_to": 151,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Availability\\Business\\Model\\ProductReservationReaderInterface::getProductAbstractAvailability has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/AvailabilityFacade.php",
            "snippet": "            ->getProductAbstractAvailability($idProductAbstract, $idLocale);",
            "selected_text": "getProductAbstractAvailability",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 170,
            "line_to": 170,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Availability\\Business\\AvailabilityBusinessFactory::createProductReservationReader has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/AvailabilityFacade.php",
            "snippet": "            ->createProductReservationReader()",
            "selected_text": "createProductReservationReader",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 171,
            "line_to": 171,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Availability\\Business\\Model\\ProductReservationReaderInterface::findProductAbstractAvailability has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/AvailabilityFacade.php",
            "snippet": "            ->findProductAbstractAvailability($idProductAbstract, $idLocale, $idStore);",
            "selected_text": "findProductAbstractAvailability",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 189,
            "line_to": 189,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Availability\\Business\\AvailabilityBusinessFactory::createProductReservationReader has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/AvailabilityFacade.php",
            "snippet": "            ->createProductReservationReader()",
            "selected_text": "createProductReservationReader",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 190,
            "line_to": 190,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Availability\\Business\\Model\\ProductReservationReaderInterface::findProductConcreteAvailability has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/AvailabilityFacade.php",
            "snippet": "            ->findProductConcreteAvailability($productConcreteAvailabilityRequestTransfer);",
            "selected_text": "findProductConcreteAvailability",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 24,
            "line_to": 24,
            "type": "DeprecatedInterface",
            "message": "Spryker\\Zed\\Availability\\Business\\Model\\ProductReservationReaderInterface is marked deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Business/Model/ProductReservationReader.php",
            "snippet": "class ProductReservationReader implements ProductReservationReaderInterface",
            "selected_text": "ProductReservationReader",
            "error_level": 2,
            "shortcode": 152
        },
        {
            "severity": "info",
            "line_from": 29,
            "line_to": 29,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Availability\\Business\\AvailabilityFacadeInterface::findProductConcreteAvailability has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Communication/Controller/GatewayController.php",
            "snippet": "        return $this->getFacade()->findProductConcreteAvailability($productConcreteAvailabilityRequestTransfer);",
            "selected_text": "findProductConcreteAvailability",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 22,
            "line_to": 22,
            "type": "DeprecatedInterface",
            "message": "Spryker\\Zed\\Oms\\Dependency\\Plugin\\ReservationHandlerPluginInterface is marked deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Communication/Plugin/AvailabilityHandlerPlugin.php",
            "snippet": "class AvailabilityHandlerPlugin extends AbstractPlugin implements ReservationHandlerPluginInterface, StockUpdateHandlerPluginInterface",
            "selected_text": "AvailabilityHandlerPlugin",
            "error_level": 2,
            "shortcode": 152
        },
        {
            "severity": "info",
            "line_from": 21,
            "line_to": 21,
            "type": "DeprecatedInterface",
            "message": "Spryker\\Zed\\Checkout\\Dependency\\Plugin\\CheckoutPreConditionInterface is marked deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Availability/src/Spryker/Zed/Availability/Communication/Plugin/ProductsAvailableCheckoutPreConditionPlugin.php",
            "snippet": "class ProductsAvailableCheckoutPreConditionPlugin extends AbstractPlugin implements CheckoutPreConditionInterface",
            "selected_text": "ProductsAvailableCheckoutPreConditionPlugin",
            "error_level": 2,
            "shortcode": 152
        }
    ]
}